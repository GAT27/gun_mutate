<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SCENE SETUP

d3d_start();
d3d_set_hidden(true);
d3d_set_culling(true);
d3d_set_lighting(true);
texture_set_interpolation(true);
//d3d_set_fog(true,c_ltgray,2000,3000);
d3d_light_define_direction(1,0,-1,-1,c_white);
//d3d_light_define_direction(2,0,1,-1,c_black);
d3d_light_define_direction(2,0,1,-1,c_white);
d3d_light_define_direction(3,1,1,1,c_white);
d3d_light_define_direction(4,-1,1,1,c_white);
//d3d_light_define_point(3,player.x,player.y+50,player.z,2000,c_white);
d3d_light_enable(1,true);
d3d_light_enable(2,true);
d3d_light_enable(3,true);
d3d_light_enable(4,true);

xup = 0;
yup = 1;
zup = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CAMERA

draw_set_color(c_white);

var cx = cos(player.mouse_dx*pi/180)*player.cc;
var cy = -sin(player.mouse_dy*pi/180);
var cz = sin(player.mouse_dx*pi/180)*player.cc;

/*var target_x = player.x + player.sq/2;
var target_y = player.y + player.sq/2;
var target_z = player.z + player.sq/2;
var cam_x = target_x + cx*dist;
var cam_y = target_y + cy*dist;
var cam_z = target_z + cz*dist;*/
var cam_x = player.x + player.sq/2;
var cam_y = player.y + player.sq*5/2;
var cam_z = player.z + player.sq/2;
var target_x = cam_x - cx;
var target_y = cam_y - cy;
var target_z = cam_z - cz;
d3d_set_projection(cam_x,cam_y,cam_z,target_x,target_y,target_z,xup,yup,zup);
//d3d_set_projection(target_x,target_y,target_z,cam_x,cam_y,cam_z,xup,yup,zup);
//player.cam_x = (cam_x+target_x)*0.5;
//player.cam_y = (cam_y+target_y)*0.5;
//player.cam_z = (cam_z+target_z)*0.5;

/*else
{   /*mouse_direction -= 1;
    //zview += 1;
    m_turn--;
    if !m_turn
    {   manual_mode = 1;
        m_turn = 90;
        mouse_direction -= 90;
        zview -= 80;
    }
    xup = 0;
                yup = 0;
                zup = -1;
                var cx = cos(mouse_direction*pi/180)*cc;
                var cy = sin(mouse_direction*pi/180)*cc;
                var cz = sin(zview*pi/180);*/
//}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
